AWSTemplateFormatVersion: '2010-09-09'
Description: '<%= description %>'

Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      CidrBlock: 10.<%= range %>.0.0/16
      Tags:
        - Key: Name
          Value: <%= name %>
        - Key: COST
          Value: <%= cost %>
        - Key: Customer
          Value: <%= customer %>
  SubnetA:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Sub ${AWS::Region}a
      CidrBlock: 10.<%= range %>.0.0/24
      MapPublicIpOnLaunch: 'true'
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: <%= name %>A
        - Key: COST
          Value: <%= cost %>
        - Key: Customer
          Value: <%= customer %>
  SubnetB:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Sub ${AWS::Region}b
      CidrBlock: 10.<%= range %>.1.0/24
      MapPublicIpOnLaunch: 'true'
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: <%= name %>B
        - Key: COST
          Value: <%= cost %>
        - Key: Customer
          Value: <%= customer %>
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: <%= name %>IGW
        - Key: COST
          Value: <%= cost %>
        - Key: Customer
          Value: <%= customer %>
  GatewayToInternet:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: <%= name %>Routing
        - Key: COST
          Value: <%= cost %>
        - Key: Customer
          Value: <%= customer %>
  PublicRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: GatewayToInternet
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  SubnetARouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref SubnetA
      RouteTableId: !Ref PublicRouteTable
  SubnetBRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref SubnetB
      RouteTableId: !Ref PublicRouteTable

Outputs:
  VPC:
    Description: 'The VPC'
    Value: !Ref VPC
    Export:
      Name: !Sub ${AWS::StackName}-VPC
  RouteTable:
    Description: 'The VPC RouteTable'
    Value: !Ref PublicRouteTable
    Export:
      Name: !Sub ${AWS::StackName}-RTB
  SubnetA:
    Description: 'The Subnet in AZ a'
    Value: !Ref SubnetA
    Export:
      Name: !Sub ${AWS::StackName}-SubnetA
  SubnetB:
    Description: 'The Subnet in AZ b'
    Value: !Ref SubnetB
    Export:
      Name: !Sub ${AWS::StackName}-SubnetB